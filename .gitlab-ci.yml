image: ruby:3.1.6

services:
  - postgres:latest

variables:
  POSTGRES_DB: microproject
  POSTGRES_USER: myuser
  POSTGRES_PASSWORD: mypassword
  DATABASE_URL: postgres://myuser:mypassword@postgres:5432/$POSTGRES_DB

# Cache gems in between builds
cache:
  paths:
    - vendor/ruby

stages:
  - build
  - test

build:
  only:
    - main
  image: docker:20.10.16
  stage: build
  services:
    - docker:20.10.16-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

rspec:
  stage: test
  variables:
    RAILS_ENV: test
  before_script:
    - ruby -v
    - apt-get update -qq
    - apt-get install -y wget curl unzip

    # Install Google Chrome
    - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | tee /etc/apt/sources.list.d/google-chrome.list
    - apt-get update -qq
    - apt-get install -y google-chrome-stable

    # Get the installed Chrome version
    - CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
    - echo "Chrome version installed: $CHROME_VERSION"

    # Download the matching Chromedriver version
    - CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
    - if [ -z "$CHROMEDRIVER_VERSION" ]; then echo "No matching Chromedriver version found for Chrome $CHROME_VERSION"; exit 1; fi
    - wget -q https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
    - unzip chromedriver_linux64.zip -d /usr/local/bin/
    - chmod +x /usr/local/bin/chromedriver
    - rm chromedriver_linux64.zip

    - bundle config set --local deployment true
    - bundle install -j $(nproc)
  script:
    - bundle exec rails db:migrate
    - bundle exec rails db:seed
    - bundle exec rails assets:precompile
    - bundle exec rspec spec
  coverage: '/\((\d+\.\d+)%\) covered/'
